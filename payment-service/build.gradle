plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(20)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven {
        url 'https://packages.confluent.io/maven/'
    }
		    maven {
        url = uri("http://localhost:8081/repository/maven-snapshots/") // Nexus Repository
        allowInsecureProtocol = true
        credentials {
            username = "admin" // Tài khoản Nexus
            password = "admin123" // Mật khẩu Nexus
        }
    }
}

ext {
	set('springCloudVersion', "2024.0.0")
	set('springGrpcVersion', "0.3.0-SNAPSHOT")
}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	
	implementation 'io.grpc:grpc-services'

  implementation 'net.devh:grpc-server-spring-boot-starter:3.1.0.RELEASE'
	implementation 'net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE'
	implementation ('com.example:grpc-proto:0.0.1-SNAPSHOT') {changing = true}

	implementation 'io.grpc:grpc-netty-shaded'
  implementation 'io.grpc:grpc-netty'

	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'io.confluent:kafka-protobuf-serializer:7.8.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.grpc:spring-grpc-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option 'jakarta_omit'
				option '@generated=omit'
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
