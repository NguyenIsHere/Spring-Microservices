syntax = "proto3";

package order;

// Import để dùng các message liên quan
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;

// Order Service
service OrderService {
    // Tạo đơn hàng mới
    rpc CreateOrder(CreateOrderRequest) returns (OrderResponse);

    // Lấy thông tin đơn hàng theo ID
    rpc GetOrderById(GetOrderRequest) returns (OrderResponse);

    // Lấy danh sách đơn hàng theo userId
    rpc GetOrdersByUserId(GetOrdersByUserIdRequest) returns (OrdersResponse);

    // Cập nhật trạng thái đơn hàng
    rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (OrderResponse);
}

// Request để tạo đơn hàng mới
message CreateOrderRequest {
    string userId = 1;                     // ID của user
}

// Request để lấy đơn hàng theo ID
message GetOrderRequest {
    string orderId = 1; // ID của đơn hàng
}

// Request để lấy danh sách đơn hàng theo userId
message GetOrdersByUserIdRequest {
    string userId = 1; // ID của user
}

// Request để cập nhật trạng thái đơn hàng
message UpdateOrderStatusRequest {
    string orderId = 1;     // ID của đơn hàng
    string status = 2;      // Trạng thái mới (PENDING, PAID, CANCELLED)
}

// Response chứa thông tin 1 đơn hàng
message OrderResponse {
    Order order = 1; // Thông tin đơn hàng
}

// Response chứa danh sách đơn hàng
message OrdersResponse {
    repeated Order orders = 1; // Danh sách đơn hàng
}

// Message cho thông tin đơn hàng
message Order {
    string id = 1;                       // ID của đơn hàng
    string userId = 2;                   // ID của user
    repeated OrderItem items = 3;        // Danh sách sản phẩm trong đơn hàng
    double totalPrice = 4;               // Tổng giá trị đơn hàng
    int32 totalQuantity = 5;             // Tổng số lượng sản phẩm
    string status = 6;                   // Trạng thái của đơn hàng (PENDING, PAID, CANCELLED)
    google.protobuf.Timestamp createdAt = 7; // Ngày tạo đơn hàng
    google.protobuf.Timestamp updatedAt = 8; // Ngày cập nhật đơn hàng
}

// Message cho thông tin từng sản phẩm trong đơn hàng
message OrderItem {
    string productVariantId = 1; // ID của ProductVariant
    string name = 2;             // Tên sản phẩm
    string color = 3;            // Màu sản phẩm
    string size = 4;             // Kích thước sản phẩm
    string imageUrl = 5;         // Ảnh sản phẩm
    int32 quantity = 6;          // Số lượng sản phẩm
    double price = 7;            // Giá của một sản phẩm
    double totalPrice = 8;       // Tổng giá trị của sản phẩm (quantity * price)
}

// Message tạo yêu cầu thanh toán
message PaymentRequestEvent {
    string orderId = 1;
    string userId = 2;
    double totalPrice = 3;
    repeated OrderItem items = 4;
}
